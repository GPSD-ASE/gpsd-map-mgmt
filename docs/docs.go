// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Rokas Paulauskas",
            "email": "paulausr@tcd.ie"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/evacuation": {
            "post": {
                "description": "Calculates an evacuation route from a danger point to a safe zone. If safe_point is omitted, the API determines the nearest safe zone matching the incident type.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Evacuation"
                ],
                "summary": "Calculate Evacuation Route",
                "parameters": [
                    {
                        "description": "Evacuation Request",
                        "name": "evacuationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.EvacuationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.EvacuationRouteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/routing": {
            "get": {
                "description": "Calculates a route between two points using the GraphHopper service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Routing"
                ],
                "summary": "Calculate Route",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"53.349805,-6.26031\"",
                        "description": "Origin coordinates in latitude,longitude format",
                        "name": "origin",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"53.3478,-6.2597\"",
                        "description": "Destination coordinates in latitude,longitude format",
                        "name": "destination",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.RouteResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch route",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/zones": {
            "get": {
                "description": "Retrieves a list of disaster zones from the database.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisasterZone"
                ],
                "summary": "Retrieve Disaster Zones",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.DisasterZone"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.DisasterZone": {
            "type": "object",
            "properties": {
                "incident_id": {
                    "description": "The unique identifier of the incident.",
                    "type": "integer",
                    "example": 1
                },
                "incident_name": {
                    "description": "The name of the incident.",
                    "type": "string",
                    "example": "Flood Zone"
                },
                "latitude": {
                    "description": "The latitude of the incident location.",
                    "type": "number",
                    "example": 53.349805
                },
                "longitude": {
                    "description": "The longitude of the incident location.",
                    "type": "number",
                    "example": -6.26031
                },
                "radius": {
                    "description": "The calculated radius for the disaster zone.",
                    "type": "number",
                    "example": 30.5
                }
            }
        },
        "handlers.EvacuationRequest": {
            "type": "object"
        },
        "services.EvacuationRouteResponse": {
            "type": "object",
            "properties": {
                "hints": {
                    "type": "object",
                    "additionalProperties": true
                },
                "info": {
                    "type": "object",
                    "additionalProperties": true
                },
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.RoutePath"
                    }
                }
            }
        },
        "services.GeoJSON": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "description": "can be []float64 or [][]float64 depending on the geometry"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "services.Instruction": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "heading": {
                    "type": "number"
                },
                "interval": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sign": {
                    "type": "integer"
                },
                "street_name": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "services.RoutePath": {
            "type": "object",
            "properties": {
                "ascend": {
                    "type": "number"
                },
                "bbox": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "descend": {
                    "type": "number"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "distance": {
                    "type": "number"
                },
                "instructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.Instruction"
                    }
                },
                "legs": {
                    "type": "array",
                    "items": {}
                },
                "points": {
                    "$ref": "#/definitions/services.GeoJSON"
                },
                "points_encoded": {
                    "type": "boolean"
                },
                "snapped_waypoints": {
                    "$ref": "#/definitions/services.GeoJSON"
                },
                "time": {
                    "type": "integer"
                },
                "transfers": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "services.RouteResponse": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "time": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:7000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Disaster Response Map API",
	Description:      "API for disaster response, including retrieval of disaster zones, routing between two points, and calculating evacuation routes.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
